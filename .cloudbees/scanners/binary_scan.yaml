apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name:  binary_scan

jobs:
  scan:
    steps:
      - name: Initiate execution plan
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-plugin-chain-utils:latest
        id: plan
        with:
          entrypoint: assets-plugin-chain-utils
          args: configure
        env:
          INPUT_CLOUDBEES_API_TOKEN: ${{ cloudbees.api.token }}
          INPUT_CLOUDBEES_API_URL: ${{ cloudbees.api.url }}
          INPUT_RUN_ID: ${{ cloudbees.run_id }}
          INPUT_PLUGIN_LIST: 'gosec,njsscan,gitleaks'
    # - id: downloadWorkflowArtifact
    #   name: Download workflow artifact
    #   uses: docker://alpine/curl:latest
    #   run: |
    #     dev=$(echo $JWT | base64)
    #     echo $dev
    #     echo "$URL/v1/workflows/$WORKFLOW_ID/runs/$RUN_ID/attempts/1/jobs/$JOB_ID/artifacts/download?componentId=$COMPONENT_ID&fileArtifactName=10kb.dat" -H "Authorization: Bearer $JWT" -H 'Content-Type: application/json'
    #     # curl -i -X 'GET' "$URL/v1/workflows/7cd88056-6bef-4fdc-aeec-756922b44a9b/runs/$RUN_ID/attempts/1/jobs/$JOB_ID/artifacts/download?componentId=d9ccc8a5-c5f9-4552-8a71-eae869b04a9c&fileArtifactName=10kb.dat" -H "Authorization: Bearer $JWT" -H 'Content-Type: application/json'
    #   env:
    #     RUN_ID: ${{ cloudbees.run_id }}
    #     JOB_ID: ${{ job.id }}
    #     STEP_ID: ${{ step.id }}
    #     JWT: ${{ cloudbees.api.token }}
    #     COMPONENT_ID: ${{ component.id }}
    #     WORKFLOW_ID: ${{ cloudbees.workflow_id }}
    #     URL: ${{ cloudbees.api.url }}