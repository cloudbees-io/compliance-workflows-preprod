apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name:  scan

#permissions:
#  scm-token-own: read
#  id-token: write

jobs:
  scan:
    steps:
      - name: Initiate execution plan
        uses: cloudbees-io/asset-chain-utils-preprod/start-chain@v1
        id: plan

      - name: Login to AWS
        uses: cloudbees-io/configure-aws-credentials@v1
        id: aws-login
        continue-on-error: true
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::020229604682:role/preprod-cloudbees-infra-mgmt
          role-duration-seconds: "3600"

      - name: Configure container registry for Staging ECR
        continue-on-error: true
        uses: cloudbees-io/configure-ecr-credentials@v1
        
      - name: Github Inventory
        if: ${{ steps.plan.outputs.github-inventory == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-github-inventory:latest
        env:
          ACCOUNT_CREDENTIALS: ${{ steps.plan.outputs.account_credentials}}
          CH_LOG_LEVEL: trace
        run: /app/plugin-git-master -mode single

      - name: Github Metadata
        if: ${{ steps.plan.outputs.github-decorator == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-github-metadata:latest
        env:
          ACCOUNT_CREDENTIALS: ${{ steps.plan.outputs.account_credentials}}
        run: /app/plugin-git-decorator -mode single

      - name: Bitbucket Inventory
        if: ${{ steps.plan.outputs.bitbucket-inventory == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-bitbucket-server:latest
        env:
          ACCOUNT_CREDENTIALS: ${{ steps.plan.outputs.account_credentials}}
          EXECUTION_ROLE: "MASTER"
        run: /app/plugin-bitbucket -mode single

      - name: Bitbucket Metadata
        if: ${{ steps.plan.outputs.bitbucket-decorator == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-bitbucket-server:latest
        env:
          ACCOUNT_CREDENTIALS: ${{ steps.plan.outputs.account_credentials}}
          EXECUTION_ROLE: "DECORATOR"
        run: /app/plugin-bitbucket -mode single

      - name: Gerrit Inventory
        if: ${{ steps.plan.outputs.gerrit-inventory == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-gerrit:latest
        env:
          ACCOUNT_CREDENTIALS: ${{ steps.plan.outputs.account_credentials}}
          EXECUTION_ROLE: "MASTER"
        run: /app/plugin-gerrit -mode single

      - name: Gerrit Metadata
        if: ${{ steps.plan.outputs.gerrit-decorator == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-gerrit:latest
        env:
          ACCOUNT_CREDENTIALS: ${{ steps.plan.outputs.account_credentials}}
          EXECUTION_ROLE: "DECORATOR"
        run: /app/plugin-gerrit -mode single

      - name: SCC Scanner
        if: ${{ steps.plan.outputs.scc == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-scc-scanner:latest
        env:
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        run: /app/plugin-scc-scanner -mode single

      - name: GoSec Scanner
        if: ${{ steps.plan.outputs.gosec == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-gosec-scanner:387952af2e974fb71bfa782ac99c105a7e6a1943
        env:
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        continue-on-error: true
        run: /app/plugin-gosec-scanner -mode single

      - name: Njs Scanner
        if: ${{ steps.plan.outputs.njsscan == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-njsscan-scanner:latest
        env:
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        continue-on-error: true
        run: /app/plugin-njsscan-scanner -mode single

      - name: Gitleaks Scanner
        if: ${{ steps.plan.outputs.gitleaks == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-gitleaks-scanner:latest
        env:
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        continue-on-error: true
        run: /app/plugin-gitleaks-scanner -mode single

      - name: BlackDuck Scanner
        if: ${{ steps.plan.outputs.blackduck == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/plugin-blackduck-sca:latest
        env:
          BLACKDUCK_PROPS : ${{ steps.plan.outputs.blackduck-props}}
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        continue-on-error: true
        run: /app/plugin-blackduck-scanner -mode single

      - name: Coverity Polaris Scanner
        if: ${{ steps.plan.outputs.coverity == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/plugin-coverity-sca:1dc5e2df6efef490a51195442d4018eb2a8c5994
        env:
          COVERITY_PROPS : ${{ steps.plan.outputs.coverity-props}}
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        continue-on-error: true
        run: /app/plugin-coverity-polaris -mode single


      - name: Checkov Scanner
        if: ${{ steps.plan.outputs.checkov == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-checkov-scanner:latest
        env:
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        continue-on-error: true
        run: /app/plugin-checkov -mode single

       # PLease do not move the position of sonarqube plugin in the list as it is creating permission issues for other plugin
       # To be addressed on the ticket
      - name: Sonar Scanner
        if: ${{ steps.plan.outputs.sonar == 'true' }}
        uses: docker://020229604682.dkr.ecr.us-east-1.amazonaws.com/actions/assets-sonarqube-scanner:latest
        env:
          SONARQUBE_PROPS : ${{ steps.plan.outputs.sonar-props}}
          RUN_ID: ${{ cloudbees.run_id }}
          JOB_ID: ${{ job.id }}
          STEP_ID: ${{ step.internal.id }}
        continue-on-error: true
        run: /app/plugin-sonarqube-scanner -mode single

      - name: Complete execution plan
        uses: cloudbees-io/asset-chain-utils-preprod/end-chain@v1
        id: process-outputs
